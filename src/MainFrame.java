/* Emircan KİREZ - Ch3rry */
/* Son Güncelleme: 12/08/2022 */
/*
----------------------- BİLGİLENDİRME --------------------------
• Projeye geçmeden önce README.md dosyasını okumanız tavsiye edilmektedir.
• Projeyle alakalı herhangi bir soru ve öneri için "emircan200123@hotmail.com" mail adresi üzerinden, konu başlığına "Github | Java-TR / İlk Swing Projem - Nerdle"
yazarak benimle iletişime geçebilirsiniz.
*/

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author EMİRCANKİREZ
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        statistics = new Statistics();
        initComponents();
        readFromFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameScreen = new javax.swing.JFrame();
        gameScreen.setVisible(false);
        timePnl = new javax.swing.JPanel();
        timerLbl = new javax.swing.JLabel();
        guessMatrixPnl = new javax.swing.JPanel();
        row0col0 = new javax.swing.JLabel();
        row0col1 = new javax.swing.JLabel();
        row0col2 = new javax.swing.JLabel();
        row0col3 = new javax.swing.JLabel();
        row0col4 = new javax.swing.JLabel();
        row0col5 = new javax.swing.JLabel();
        row0col6 = new javax.swing.JLabel();
        row0col7 = new javax.swing.JLabel();
        row0col7.setVisible(false);
        row0col8 = new javax.swing.JLabel();
        row0col8.setVisible(false);
        row1col0 = new javax.swing.JLabel();
        row1col1 = new javax.swing.JLabel();
        row1col2 = new javax.swing.JLabel();
        row1col3 = new javax.swing.JLabel();
        row1col4 = new javax.swing.JLabel();
        row1col5 = new javax.swing.JLabel();
        row1col6 = new javax.swing.JLabel();
        row1col7 = new javax.swing.JLabel();
        row1col7.setVisible(false);
        row1col8 = new javax.swing.JLabel();
        row1col8.setVisible(false);
        row2col0 = new javax.swing.JLabel();
        row2col1 = new javax.swing.JLabel();
        row2col2 = new javax.swing.JLabel();
        row2col3 = new javax.swing.JLabel();
        row2col4 = new javax.swing.JLabel();
        row2col5 = new javax.swing.JLabel();
        row2col6 = new javax.swing.JLabel();
        row2col7 = new javax.swing.JLabel();
        row2col7.setVisible(false);
        row2col8 = new javax.swing.JLabel();
        row2col8.setVisible(false);
        row3col0 = new javax.swing.JLabel();
        row3col1 = new javax.swing.JLabel();
        row3col2 = new javax.swing.JLabel();
        row3col3 = new javax.swing.JLabel();
        row3col4 = new javax.swing.JLabel();
        row3col5 = new javax.swing.JLabel();
        row3col6 = new javax.swing.JLabel();
        row3col7 = new javax.swing.JLabel();
        row3col7.setVisible(false);
        row3col8 = new javax.swing.JLabel();
        row3col8.setVisible(false);
        row4col0 = new javax.swing.JLabel();
        row4col1 = new javax.swing.JLabel();
        row4col2 = new javax.swing.JLabel();
        row4col3 = new javax.swing.JLabel();
        row4col4 = new javax.swing.JLabel();
        row4col5 = new javax.swing.JLabel();
        row4col6 = new javax.swing.JLabel();
        row4col7 = new javax.swing.JLabel();
        row4col7.setVisible(false);
        row4col8 = new javax.swing.JLabel();
        row4col8.setVisible(false);
        row5col0 = new javax.swing.JLabel();
        row5col1 = new javax.swing.JLabel();
        row5col2 = new javax.swing.JLabel();
        row5col3 = new javax.swing.JLabel();
        row5col4 = new javax.swing.JLabel();
        row5col5 = new javax.swing.JLabel();
        row5col6 = new javax.swing.JLabel();
        row5col7 = new javax.swing.JLabel();
        row5col7.setVisible(false);
        row5col8 = new javax.swing.JLabel();
        row5col8.setVisible(false);
        btnsPnl = new javax.swing.JPanel();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        plusBtn = new javax.swing.JButton();
        minusBtn = new javax.swing.JButton();
        equalBtn = new javax.swing.JButton();
        mulBtn = new javax.swing.JButton();
        divBtn = new javax.swing.JButton();
        otherBtnsPnl = new javax.swing.JPanel();
        deleteBtn = new javax.swing.JButton();
        guessBtn = new javax.swing.JButton();
        finishLaterBtn = new javax.swing.JButton();
        returnMainScreenBtn = new javax.swing.JButton();
        returnMainScreenBtn.setVisible(false);
        gameScreenFooter = new javax.swing.JPanel();
        studentInformation = new javax.swing.JLabel();
        equationScreen = new javax.swing.JFrame();
        generatedEquationTxt = new javax.swing.JTextField();
        generatedEquationLbl = new javax.swing.JLabel();
        generateAgainBtn = new javax.swing.JButton();
        mainMenuBtn = new javax.swing.JButton();
        equationFooter = new javax.swing.JPanel();
        studentInformation1 = new javax.swing.JLabel();
        StatisticsPnl = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        nOfAbondonedGamesLbl = new javax.swing.JLabel();
        nOfGamesLostLbl = new javax.swing.JLabel();
        nOfGamesWonLbl = new javax.swing.JLabel();
        inHowManyLinesOnAverageLbl = new javax.swing.JLabel();
        inHowLongOnAverageLbl = new javax.swing.JLabel();
        nOfAbondonedGamesTxt = new javax.swing.JTextField();
        nOfGamesLostTxt = new javax.swing.JTextField();
        nOfGamesWonTxt = new javax.swing.JTextField();
        inHowManyLinesOnAverageTxt = new javax.swing.JTextField();
        inHowLongOnAverageTxt = new javax.swing.JTextField();
        MainScreenBtnsPnl = new javax.swing.JPanel();
        newGameBtn = new javax.swing.JButton();
        testBtn = new javax.swing.JButton();
        continueBtn = new javax.swing.JButton();
        continueBtn.setVisible(false);
        gameScreenFooter1 = new javax.swing.JPanel();
        studentInformation2 = new javax.swing.JLabel();

        gameScreen.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        gameScreen.setTitle("Oyun Ekranı");
        gameScreen.setLocation(new java.awt.Point(100, 100));
        gameScreen.setMinimumSize(new java.awt.Dimension(415, 550));
        gameScreen.setPreferredSize(new java.awt.Dimension(415, 550));
        gameScreen.setResizable(false);

        timerLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        timerLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timerLbl.setText("00:00:00");

        javax.swing.GroupLayout timePnlLayout = new javax.swing.GroupLayout(timePnl);
        timePnl.setLayout(timePnlLayout);
        timePnlLayout.setHorizontalGroup(
            timePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timePnlLayout.createSequentialGroup()
                .addComponent(timerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        timePnlLayout.setVerticalGroup(
            timePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timerLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        guessMatrixPnl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        guessMatrixPnl.setMinimumSize(new java.awt.Dimension(390, 190));
        guessMatrixPnl.setLayout(new java.awt.GridLayout(6, 9, 2, 2));

        row0col0.setBackground(new java.awt.Color(255, 255, 255));
        row0col0.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col0.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col0.setOpaque(true);
        row0col0.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col0MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col0);

        row0col1.setBackground(new java.awt.Color(255, 255, 255));
        row0col1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col1.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col1.setOpaque(true);
        row0col1.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col1MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col1);

        row0col2.setBackground(new java.awt.Color(255, 255, 255));
        row0col2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col2.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col2.setOpaque(true);
        row0col2.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col2MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col2);

        row0col3.setBackground(new java.awt.Color(255, 255, 255));
        row0col3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col3.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col3.setOpaque(true);
        row0col3.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col3MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col3);

        row0col4.setBackground(new java.awt.Color(255, 255, 255));
        row0col4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col4.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col4.setOpaque(true);
        row0col4.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col4MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col4);

        row0col5.setBackground(new java.awt.Color(255, 255, 255));
        row0col5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col5.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col5.setOpaque(true);
        row0col5.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col5MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col5);

        row0col6.setBackground(new java.awt.Color(255, 255, 255));
        row0col6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col6.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col6.setOpaque(true);
        row0col6.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col6MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col6);

        row0col7.setBackground(new java.awt.Color(255, 255, 255));
        row0col7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col7.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col7.setOpaque(true);
        row0col7.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col7MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col7);

        row0col8.setBackground(new java.awt.Color(255, 255, 255));
        row0col8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row0col8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row0col8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row0col8.setMinimumSize(new java.awt.Dimension(25, 25));
        row0col8.setOpaque(true);
        row0col8.setPreferredSize(new java.awt.Dimension(25, 25));
        row0col8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row0col8MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row0col8);

        row1col0.setBackground(new java.awt.Color(255, 255, 255));
        row1col0.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col0.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col0.setOpaque(true);
        row1col0.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col0MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col0);

        row1col1.setBackground(new java.awt.Color(255, 255, 255));
        row1col1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col1.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col1.setOpaque(true);
        row1col1.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col1MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col1);

        row1col2.setBackground(new java.awt.Color(255, 255, 255));
        row1col2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col2.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col2.setOpaque(true);
        row1col2.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col2MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col2);

        row1col3.setBackground(new java.awt.Color(255, 255, 255));
        row1col3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col3.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col3.setOpaque(true);
        row1col3.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col3MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col3);

        row1col4.setBackground(new java.awt.Color(255, 255, 255));
        row1col4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col4.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col4.setOpaque(true);
        row1col4.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col4MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col4);

        row1col5.setBackground(new java.awt.Color(255, 255, 255));
        row1col5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col5.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col5.setOpaque(true);
        row1col5.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col5MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col5);

        row1col6.setBackground(new java.awt.Color(255, 255, 255));
        row1col6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col6.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col6.setOpaque(true);
        row1col6.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col6MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col6);

        row1col7.setBackground(new java.awt.Color(255, 255, 255));
        row1col7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col7.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col7.setOpaque(true);
        row1col7.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col7MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col7);

        row1col8.setBackground(new java.awt.Color(255, 255, 255));
        row1col8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row1col8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row1col8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row1col8.setMinimumSize(new java.awt.Dimension(25, 25));
        row1col8.setOpaque(true);
        row1col8.setPreferredSize(new java.awt.Dimension(25, 25));
        row1col8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1col8MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row1col8);

        row2col0.setBackground(new java.awt.Color(255, 255, 255));
        row2col0.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col0.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col0.setOpaque(true);
        row2col0.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col0MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col0);

        row2col1.setBackground(new java.awt.Color(255, 255, 255));
        row2col1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col1.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col1.setOpaque(true);
        row2col1.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col1MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col1);

        row2col2.setBackground(new java.awt.Color(255, 255, 255));
        row2col2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col2.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col2.setOpaque(true);
        row2col2.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col2MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col2);

        row2col3.setBackground(new java.awt.Color(255, 255, 255));
        row2col3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col3.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col3.setOpaque(true);
        row2col3.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col3MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col3);

        row2col4.setBackground(new java.awt.Color(255, 255, 255));
        row2col4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col4.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col4.setOpaque(true);
        row2col4.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col4MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col4);

        row2col5.setBackground(new java.awt.Color(255, 255, 255));
        row2col5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col5.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col5.setOpaque(true);
        row2col5.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col5MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col5);

        row2col6.setBackground(new java.awt.Color(255, 255, 255));
        row2col6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col6.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col6.setOpaque(true);
        row2col6.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col6MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col6);

        row2col7.setBackground(new java.awt.Color(255, 255, 255));
        row2col7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col7.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col7.setOpaque(true);
        row2col7.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col7MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col7);

        row2col8.setBackground(new java.awt.Color(255, 255, 255));
        row2col8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row2col8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row2col8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row2col8.setMinimumSize(new java.awt.Dimension(25, 25));
        row2col8.setOpaque(true);
        row2col8.setPreferredSize(new java.awt.Dimension(25, 25));
        row2col8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2col8MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row2col8);

        row3col0.setBackground(new java.awt.Color(255, 255, 255));
        row3col0.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col0.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col0.setOpaque(true);
        row3col0.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col0MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col0);

        row3col1.setBackground(new java.awt.Color(255, 255, 255));
        row3col1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col1.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col1.setOpaque(true);
        row3col1.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col1MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col1);

        row3col2.setBackground(new java.awt.Color(255, 255, 255));
        row3col2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col2.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col2.setOpaque(true);
        row3col2.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col2MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col2);

        row3col3.setBackground(new java.awt.Color(255, 255, 255));
        row3col3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col3.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col3.setOpaque(true);
        row3col3.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col3MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col3);

        row3col4.setBackground(new java.awt.Color(255, 255, 255));
        row3col4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col4.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col4.setOpaque(true);
        row3col4.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col4MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col4);

        row3col5.setBackground(new java.awt.Color(255, 255, 255));
        row3col5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col5.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col5.setOpaque(true);
        row3col5.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col5MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col5);

        row3col6.setBackground(new java.awt.Color(255, 255, 255));
        row3col6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col6.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col6.setOpaque(true);
        row3col6.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col6MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col6);

        row3col7.setBackground(new java.awt.Color(255, 255, 255));
        row3col7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col7.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col7.setOpaque(true);
        row3col7.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col7MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col7);

        row3col8.setBackground(new java.awt.Color(255, 255, 255));
        row3col8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row3col8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row3col8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row3col8.setMinimumSize(new java.awt.Dimension(25, 25));
        row3col8.setOpaque(true);
        row3col8.setPreferredSize(new java.awt.Dimension(25, 25));
        row3col8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3col8MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row3col8);

        row4col0.setBackground(new java.awt.Color(255, 255, 255));
        row4col0.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col0.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col0.setOpaque(true);
        row4col0.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col0MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col0);

        row4col1.setBackground(new java.awt.Color(255, 255, 255));
        row4col1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col1.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col1.setOpaque(true);
        row4col1.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col1MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col1);

        row4col2.setBackground(new java.awt.Color(255, 255, 255));
        row4col2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col2.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col2.setOpaque(true);
        row4col2.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col2MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col2);

        row4col3.setBackground(new java.awt.Color(255, 255, 255));
        row4col3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col3.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col3.setOpaque(true);
        row4col3.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col3MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col3);

        row4col4.setBackground(new java.awt.Color(255, 255, 255));
        row4col4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col4.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col4.setOpaque(true);
        row4col4.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col4MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col4);

        row4col5.setBackground(new java.awt.Color(255, 255, 255));
        row4col5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col5.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col5.setOpaque(true);
        row4col5.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col5MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col5);

        row4col6.setBackground(new java.awt.Color(255, 255, 255));
        row4col6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col6.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col6.setOpaque(true);
        row4col6.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col6MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col6);

        row4col7.setBackground(new java.awt.Color(255, 255, 255));
        row4col7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col7.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col7.setOpaque(true);
        row4col7.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col7MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col7);

        row4col8.setBackground(new java.awt.Color(255, 255, 255));
        row4col8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row4col8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row4col8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row4col8.setMinimumSize(new java.awt.Dimension(25, 25));
        row4col8.setOpaque(true);
        row4col8.setPreferredSize(new java.awt.Dimension(25, 25));
        row4col8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4col8MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row4col8);

        row5col0.setBackground(new java.awt.Color(255, 255, 255));
        row5col0.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col0.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col0.setOpaque(true);
        row5col0.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col0MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col0);

        row5col1.setBackground(new java.awt.Color(255, 255, 255));
        row5col1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col1.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col1.setOpaque(true);
        row5col1.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col1MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col1);

        row5col2.setBackground(new java.awt.Color(255, 255, 255));
        row5col2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col2.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col2.setOpaque(true);
        row5col2.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col2MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col2);

        row5col3.setBackground(new java.awt.Color(255, 255, 255));
        row5col3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col3.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col3.setOpaque(true);
        row5col3.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col3MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col3);

        row5col4.setBackground(new java.awt.Color(255, 255, 255));
        row5col4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col4.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col4.setOpaque(true);
        row5col4.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col4MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col4);

        row5col5.setBackground(new java.awt.Color(255, 255, 255));
        row5col5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col5.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col5.setOpaque(true);
        row5col5.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col5MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col5);

        row5col6.setBackground(new java.awt.Color(255, 255, 255));
        row5col6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col6.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col6.setOpaque(true);
        row5col6.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col6MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col6);

        row5col7.setBackground(new java.awt.Color(255, 255, 255));
        row5col7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col7.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col7.setOpaque(true);
        row5col7.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col7MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col7);

        row5col8.setBackground(new java.awt.Color(255, 255, 255));
        row5col8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        row5col8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        row5col8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        row5col8.setMinimumSize(new java.awt.Dimension(25, 25));
        row5col8.setOpaque(true);
        row5col8.setPreferredSize(new java.awt.Dimension(25, 25));
        row5col8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5col8MouseClicked(evt);
            }
        });
        guessMatrixPnl.add(row5col8);

        btnsPnl.setMinimumSize(new java.awt.Dimension(210, 210));
        btnsPnl.setPreferredSize(new java.awt.Dimension(210, 210));
        btnsPnl.setLayout(new java.awt.GridLayout(5, 3, 5, 5));

        btn7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn7);

        btn8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn8);

        btn9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn9);

        btn4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn4);

        btn5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn5);

        btn6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn6);

        btn1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn1);

        btn2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn2);

        btn3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn3);

        btn0.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });
        btnsPnl.add(btn0);

        plusBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        plusBtn.setText("+");
        plusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusBtnActionPerformed(evt);
            }
        });
        btnsPnl.add(plusBtn);

        minusBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        minusBtn.setText("-");
        minusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusBtnActionPerformed(evt);
            }
        });
        btnsPnl.add(minusBtn);

        equalBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        equalBtn.setText("=");
        equalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalBtnActionPerformed(evt);
            }
        });
        btnsPnl.add(equalBtn);

        mulBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mulBtn.setText("*");
        mulBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulBtnActionPerformed(evt);
            }
        });
        btnsPnl.add(mulBtn);

        divBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        divBtn.setText("/");
        divBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divBtnActionPerformed(evt);
            }
        });
        btnsPnl.add(divBtn);

        otherBtnsPnl.setLayout(new java.awt.GridLayout(4, 0, 0, 5));

        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteBtn.setText("Sil");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        otherBtnsPnl.add(deleteBtn);

        guessBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        guessBtn.setText("Tahmin Et");
        guessBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessBtnActionPerformed(evt);
            }
        });
        otherBtnsPnl.add(guessBtn);

        finishLaterBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        finishLaterBtn.setText("Sonra Bitir");
        finishLaterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishLaterBtnActionPerformed(evt);
            }
        });
        otherBtnsPnl.add(finishLaterBtn);

        returnMainScreenBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        returnMainScreenBtn.setText("Ana Menü");
        returnMainScreenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnMainScreenBtnActionPerformed(evt);
            }
        });
        otherBtnsPnl.add(returnMainScreenBtn);

        studentInformation.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        studentInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentInformation.setText(" 19011049 Emircan KİREZ ");

        javax.swing.GroupLayout gameScreenFooterLayout = new javax.swing.GroupLayout(gameScreenFooter);
        gameScreenFooter.setLayout(gameScreenFooterLayout);
        gameScreenFooterLayout.setHorizontalGroup(
            gameScreenFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameScreenFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gameScreenFooterLayout.setVerticalGroup(
            gameScreenFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentInformation, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout gameScreenLayout = new javax.swing.GroupLayout(gameScreen.getContentPane());
        gameScreen.getContentPane().setLayout(gameScreenLayout);
        gameScreenLayout.setHorizontalGroup(
            gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(gameScreenLayout.createSequentialGroup()
                .addComponent(btnsPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(otherBtnsPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(gameScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gameScreenFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(guessMatrixPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        gameScreenLayout.setVerticalGroup(
            gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(timePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guessMatrixPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                    .addComponent(otherBtnsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameScreenFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        equationScreen.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        equationScreen.setTitle("Denklem Üret");
        equationScreen.setLocation(new java.awt.Point(100, 100));
        equationScreen.setMinimumSize(new java.awt.Dimension(420, 280));
        equationScreen.setResizable(false);

        generatedEquationTxt.setEditable(false);
        generatedEquationTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        generatedEquationTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        generatedEquationLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        generatedEquationLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generatedEquationLbl.setText("Üretilen Denklem");

        generateAgainBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        generateAgainBtn.setText("Yeniden Üret");
        generateAgainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateAgainBtnActionPerformed(evt);
            }
        });

        mainMenuBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mainMenuBtn.setText("Ana Menü");
        mainMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuBtnActionPerformed(evt);
            }
        });

        studentInformation1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        studentInformation1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentInformation1.setText("19011049 Emircan KİREZ ");

        javax.swing.GroupLayout equationFooterLayout = new javax.swing.GroupLayout(equationFooter);
        equationFooter.setLayout(equationFooterLayout);
        equationFooterLayout.setHorizontalGroup(
            equationFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equationFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentInformation1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        equationFooterLayout.setVerticalGroup(
            equationFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentInformation1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout equationScreenLayout = new javax.swing.GroupLayout(equationScreen.getContentPane());
        equationScreen.getContentPane().setLayout(equationScreenLayout);
        equationScreenLayout.setHorizontalGroup(
            equationScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equationScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(equationScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, equationScreenLayout.createSequentialGroup()
                        .addComponent(mainMenuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(generateAgainBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, equationScreenLayout.createSequentialGroup()
                        .addComponent(generatedEquationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))))
            .addGroup(equationScreenLayout.createSequentialGroup()
                .addGroup(equationScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, equationScreenLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(equationFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(generatedEquationTxt))
                .addContainerGap())
        );

        equationScreenLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {generateAgainBtn, mainMenuBtn});

        equationScreenLayout.setVerticalGroup(
            equationScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equationScreenLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(generatedEquationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generatedEquationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(equationScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateAgainBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(mainMenuBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(equationFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ana Menü");
        setFocusable(false);
        setLocation(new java.awt.Point(100, 100));
        setMinimumSize(new java.awt.Dimension(345, 402));
        setName("MainScreen"); // NOI18N
        setResizable(false);

        jPanel1.setLayout(new java.awt.GridLayout(5, 0, 2, 5));

        nOfAbondonedGamesLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        nOfAbondonedGamesLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nOfAbondonedGamesLbl.setText("Yarıda Bırakılan Oyun Sayısı: ");
        jPanel1.add(nOfAbondonedGamesLbl);

        nOfGamesLostLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        nOfGamesLostLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nOfGamesLostLbl.setText("Kaybedilen Oyun Sayısı: ");
        jPanel1.add(nOfGamesLostLbl);

        nOfGamesWonLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        nOfGamesWonLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nOfGamesWonLbl.setText("Kazanılan Oyun Sayısı: ");
        jPanel1.add(nOfGamesWonLbl);

        inHowManyLinesOnAverageLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        inHowManyLinesOnAverageLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inHowManyLinesOnAverageLbl.setText("Ort. Kaç Satırda Tamamlandı:");
        jPanel1.add(inHowManyLinesOnAverageLbl);

        inHowLongOnAverageLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        inHowLongOnAverageLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inHowLongOnAverageLbl.setText("Ort. Ne Kadar Sürede Tamamlandı:");
        jPanel1.add(inHowLongOnAverageLbl);

        nOfAbondonedGamesTxt.setEditable(false);
        nOfAbondonedGamesTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nOfAbondonedGamesTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nOfAbondonedGamesTxt.setText("0");

        nOfGamesLostTxt.setEditable(false);
        nOfGamesLostTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nOfGamesLostTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nOfGamesLostTxt.setText("0");

        nOfGamesWonTxt.setEditable(false);
        nOfGamesWonTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nOfGamesWonTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nOfGamesWonTxt.setText("0");

        inHowManyLinesOnAverageTxt.setEditable(false);
        inHowManyLinesOnAverageTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inHowManyLinesOnAverageTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inHowManyLinesOnAverageTxt.setText("0");

        inHowLongOnAverageTxt.setEditable(false);
        inHowLongOnAverageTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inHowLongOnAverageTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inHowLongOnAverageTxt.setText("00:00:00");

        javax.swing.GroupLayout StatisticsPnlLayout = new javax.swing.GroupLayout(StatisticsPnl);
        StatisticsPnl.setLayout(StatisticsPnlLayout);
        StatisticsPnlLayout.setHorizontalGroup(
            StatisticsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StatisticsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nOfAbondonedGamesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nOfGamesLostTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nOfGamesWonTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inHowManyLinesOnAverageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inHowLongOnAverageTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        StatisticsPnlLayout.setVerticalGroup(
            StatisticsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatisticsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatisticsPnlLayout.createSequentialGroup()
                        .addComponent(nOfAbondonedGamesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nOfGamesLostTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(nOfGamesWonTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inHowManyLinesOnAverageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inHowLongOnAverageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        newGameBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        newGameBtn.setText("Yeni Oyun");
        newGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameBtnActionPerformed(evt);
            }
        });

        testBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        testBtn.setText("Test");
        testBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testBtnActionPerformed(evt);
            }
        });

        continueBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        continueBtn.setText("Devam Et");
        continueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainScreenBtnsPnlLayout = new javax.swing.GroupLayout(MainScreenBtnsPnl);
        MainScreenBtnsPnl.setLayout(MainScreenBtnsPnlLayout);
        MainScreenBtnsPnlLayout.setHorizontalGroup(
            MainScreenBtnsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainScreenBtnsPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newGameBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(testBtn)
                .addGap(18, 18, 18)
                .addComponent(continueBtn)
                .addGap(53, 53, 53))
        );

        MainScreenBtnsPnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {continueBtn, newGameBtn, testBtn});

        MainScreenBtnsPnlLayout.setVerticalGroup(
            MainScreenBtnsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainScreenBtnsPnlLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(MainScreenBtnsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(continueBtn)
                    .addComponent(newGameBtn))
                .addContainerGap())
        );

        MainScreenBtnsPnlLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {continueBtn, newGameBtn, testBtn});

        studentInformation2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentInformation2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentInformation2.setText("19011049 Emircan KİREZ  ");

        javax.swing.GroupLayout gameScreenFooter1Layout = new javax.swing.GroupLayout(gameScreenFooter1);
        gameScreenFooter1.setLayout(gameScreenFooter1Layout);
        gameScreenFooter1Layout.setHorizontalGroup(
            gameScreenFooter1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameScreenFooter1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(studentInformation2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        gameScreenFooter1Layout.setVerticalGroup(
            gameScreenFooter1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentInformation2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StatisticsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gameScreenFooter1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(MainScreenBtnsPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StatisticsPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainScreenBtnsPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameScreenFooter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //yeniden denklem üretip onu ilgili ekranda yazar
    private void generateAgainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateAgainBtnActionPerformed
       generatedEquationTxt.setText(GenerateEquation.generateEquation());
    }//GEN-LAST:event_generateAgainBtnActionPerformed
    
    //denklem ekranından ana ekrana dönmeyi sağlar
    private void mainMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuBtnActionPerformed
        equationScreen.setVisible(false);
        setVisible(true);
    }//GEN-LAST:event_mainMenuBtnActionPerformed
    
    //tahmin et butonuna tıklanınca yapılanlar
    private void guessBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessBtnActionPerformed
        if(selectedRow != -1){
            int i = 0, j, sum = 0;
            exp = "";
            Double result;
            boolean flag = true;
            while(flag == true && i < guessMatrix[0].length){ //boş yer olmaması lazım. Boş yer varsa doldurulması beklenir
                if(guessMatrix[selectedRow][i].getText().equals(""))
                    flag = false;
                i++;            
            }
            
            if(flag == true){
                for(i = 0; i < guessMatrix[0].length; i++){
                    if(isOperand(guessMatrix[selectedRow][i].getText()) || !guessMatrix[selectedRow][i].getText().equals("=")){ //eşittir görene kadar yazılan denklemi alıyorum
                        exp += guessMatrix[selectedRow][i].getText();
                    }else{
                        for(j = i+1; j < guessMatrix[0].length; j++){ //eşittir den sonraki sonuç kısmını alıyorum
                            try{ //eğer eşittirden sonra operator koyduysa 
                                sum = sum * 10 + Integer.parseInt(guessMatrix[selectedRow][j].getText());
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(gameScreen, "Böyle bir işlem olamaz: ", "Hata Mesajı", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }
                        i = j;
                    }
                }

                result = EvaluateString.evaluate(exp); //eşittirsiz halini EvaluateString sınıfının methodu ile hesaplıyorum
                if(result < 0 || result % 1 != 0 || result != (double)sum){ //geçerli bir işlem mi diye kontrol ediyorum
                    System.out.println(result);
                    JOptionPane.showMessageDialog(gameScreen, "Böyle bir işlem olamaz: "  + result, "Hata Mesajı", JOptionPane.ERROR_MESSAGE);
                }else{ 
                    exp += "=" + String.format("%.0f", result);
                    equationsInRows.add(exp); //yazılan denklemleri equatiosInRows arraylist'inde saklıyorum
                    checkSituation(); //yazılan denklem ile üretilen denklemi karşılaştırıp gerekli renklendirme işlemlerini yapıyorum
                }
            }else{
                JOptionPane.showMessageDialog(gameScreen, "Lütfen ilgili yerleri doldurun", "Uyarı", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_guessBtnActionPerformed
    
    //oyun ekranından ana ekrana dönülmesi - oyun ekranındaki ana menü butonu oyun bitmeden gözükmez
    private void returnMainScreenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnMainScreenBtnActionPerformed
        gameScreen.setVisible(false);
        updateStatisticPanel();
        continueBtn.setVisible(false); //artık devam edilecek bir oyun kalmadığı için devam et butonunu gizliyorum
        setVisible(true);
        equationsInRows.clear(); //Artık yeni oyuna geçileceği için yazılan denklemleri siliyorum
        generatedEquation = null; //üretilen denklemi siliyorum
        elapsedTime = 0; //süreyi sıfırlıyorum
        writeToFile(); //istatistikler güncellendiği için dosyaya yazıyorum
    }//GEN-LAST:event_returnMainScreenBtnActionPerformed
    
    //denklem test etme ekranına atan butonun çalışması
    private void testBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testBtnActionPerformed
        setVisible(false);
        equationScreen.setVisible(true);
        generatedEquationTxt.setText(GenerateEquation.generateEquation()); //başlangıçta bir yeni bir denklem ile gösterilmesi için
    }//GEN-LAST:event_testBtnActionPerformed

    //yeni oyun butonun çalışması
    private void newGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameBtnActionPerformed
        equationsInRows.clear(); //öncelikle kayıtlı denklemler varsa siliyorum
        setVisible(false);
        generatedEquation = GenerateEquation.generateEquation(); //yeni oyun için bir denklem oluşturuyorum
        if(guessMatrix != null){ //oyun ilk defa başlamadıysa, yani önceden kalan bilgiler varsa
            clearAllTextField(); //önceki oyun alanındaki ilgili yerleri temizliyorum
            paintGuessMatrix(); //önceki oyun alanını tamamen beyaza boyuyorum
            makeInvisibleLabel(); //gerekli gizleme işlemleri varsa onları ayarlıyorum. Mesela 9 sütundan 8 sütuna inerken 
        }
        
        createGuessMatrix(generatedEquation.length()); //yapıyı tutacak matrisi oluşturuyorum
        returnMainScreenBtn.setVisible(false);
        timerLbl.setText("00:00:00"); 
        gameScreen.setVisible(true);
        elapsedTime = 0; //süreyi sıfır olarak güncelliyorum
        timer.start(); //süreyi başlatıyorum
        guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLUE)); //ilk satır, ilk sütun kutucuğunu seçili hale getiriyorum
    }//GEN-LAST:event_newGameBtnActionPerformed
    
    /* ilgili kutucuklara tıklandıkça seçili olan sütun değişkenini (selectedColumn) günceller. Daha iyi yazılabilir kesinlikle ama yapamadım :/ */
    private void row0col0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col0MouseClicked
        showSelectedLabel(0,0);
    }//GEN-LAST:event_row0col0MouseClicked

    private void row0col1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col1MouseClicked
        showSelectedLabel(0,1);
    }//GEN-LAST:event_row0col1MouseClicked

    private void row0col2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col2MouseClicked
        showSelectedLabel(0,2);
    }//GEN-LAST:event_row0col2MouseClicked

    private void row0col3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col3MouseClicked
        showSelectedLabel(0,3);
    }//GEN-LAST:event_row0col3MouseClicked

    private void row0col4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col4MouseClicked
        showSelectedLabel(0,4);
    }//GEN-LAST:event_row0col4MouseClicked

    private void row0col5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col5MouseClicked
        showSelectedLabel(0,5);
    }//GEN-LAST:event_row0col5MouseClicked

    private void row0col6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col6MouseClicked
        showSelectedLabel(0,6);
    }//GEN-LAST:event_row0col6MouseClicked

    private void row0col7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col7MouseClicked
        showSelectedLabel2(0,7);
    }//GEN-LAST:event_row0col7MouseClicked

    private void row0col8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row0col8MouseClicked
        showSelectedLabel2(0,8);
    }//GEN-LAST:event_row0col8MouseClicked

    private void row1col0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col0MouseClicked
        showSelectedLabel(1,0);
    }//GEN-LAST:event_row1col0MouseClicked

    private void row1col1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col1MouseClicked
        showSelectedLabel(1,1);
    }//GEN-LAST:event_row1col1MouseClicked

    private void row1col2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col2MouseClicked
        showSelectedLabel(1,2);
    }//GEN-LAST:event_row1col2MouseClicked

    private void row1col3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col3MouseClicked
        showSelectedLabel(1,3);
    }//GEN-LAST:event_row1col3MouseClicked

    private void row1col4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col4MouseClicked
        showSelectedLabel(1,4);
    }//GEN-LAST:event_row1col4MouseClicked

    private void row1col5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col5MouseClicked
        showSelectedLabel(1,5);
    }//GEN-LAST:event_row1col5MouseClicked

    private void row1col6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col6MouseClicked
        showSelectedLabel(1,6);
    }//GEN-LAST:event_row1col6MouseClicked

    private void row1col7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col7MouseClicked
        showSelectedLabel2(1,7);
    }//GEN-LAST:event_row1col7MouseClicked

    private void row1col8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1col8MouseClicked
        showSelectedLabel2(1,8);
    }//GEN-LAST:event_row1col8MouseClicked

    private void row2col0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col0MouseClicked
        showSelectedLabel(2,0);
    }//GEN-LAST:event_row2col0MouseClicked

    private void row2col1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col1MouseClicked
        showSelectedLabel(2,1);
    }//GEN-LAST:event_row2col1MouseClicked

    private void row2col2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col2MouseClicked
        showSelectedLabel(2,2);
    }//GEN-LAST:event_row2col2MouseClicked

    private void row2col3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col3MouseClicked
        showSelectedLabel(2,3);
    }//GEN-LAST:event_row2col3MouseClicked

    private void row2col4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col4MouseClicked
        showSelectedLabel(2,4);
    }//GEN-LAST:event_row2col4MouseClicked

    private void row2col5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col5MouseClicked
        showSelectedLabel(2,5);
    }//GEN-LAST:event_row2col5MouseClicked

    private void row2col6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col6MouseClicked
        showSelectedLabel(2,6);
    }//GEN-LAST:event_row2col6MouseClicked

    private void row2col7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col7MouseClicked
        showSelectedLabel2(2,7);
    }//GEN-LAST:event_row2col7MouseClicked

    private void row2col8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2col8MouseClicked
        showSelectedLabel2(2,8);
    }//GEN-LAST:event_row2col8MouseClicked

    private void row3col0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col0MouseClicked
        showSelectedLabel(3,0);
    }//GEN-LAST:event_row3col0MouseClicked

    private void row3col1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col1MouseClicked
        showSelectedLabel(3,1);
    }//GEN-LAST:event_row3col1MouseClicked

    private void row3col2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col2MouseClicked
        showSelectedLabel(3,2);
    }//GEN-LAST:event_row3col2MouseClicked

    private void row3col3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col3MouseClicked
        showSelectedLabel(3,3);
    }//GEN-LAST:event_row3col3MouseClicked

    private void row3col4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col4MouseClicked
        showSelectedLabel(3,4);
    }//GEN-LAST:event_row3col4MouseClicked

    private void row3col5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col5MouseClicked
        showSelectedLabel(3,5);
    }//GEN-LAST:event_row3col5MouseClicked

    private void row3col6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col6MouseClicked
        showSelectedLabel(3,6);
    }//GEN-LAST:event_row3col6MouseClicked

    private void row3col7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col7MouseClicked
        showSelectedLabel2(3,7);
    }//GEN-LAST:event_row3col7MouseClicked

    private void row3col8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3col8MouseClicked
        showSelectedLabel2(3,8);
    }//GEN-LAST:event_row3col8MouseClicked

    private void row4col0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col0MouseClicked
        showSelectedLabel(4,0);
    }//GEN-LAST:event_row4col0MouseClicked

    private void row4col1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col1MouseClicked
        showSelectedLabel(4,1);
    }//GEN-LAST:event_row4col1MouseClicked

    private void row4col2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col2MouseClicked
        showSelectedLabel(4,2);
    }//GEN-LAST:event_row4col2MouseClicked

    private void row4col3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col3MouseClicked
        showSelectedLabel(4,3);
    }//GEN-LAST:event_row4col3MouseClicked

    private void row4col4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col4MouseClicked
        showSelectedLabel(4,4);
    }//GEN-LAST:event_row4col4MouseClicked

    private void row4col5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col5MouseClicked
        showSelectedLabel(4,5);
    }//GEN-LAST:event_row4col5MouseClicked

    private void row4col6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col6MouseClicked
        showSelectedLabel(4,6);
    }//GEN-LAST:event_row4col6MouseClicked

    private void row4col7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col7MouseClicked
        showSelectedLabel2(4,7);
    }//GEN-LAST:event_row4col7MouseClicked

    private void row4col8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4col8MouseClicked
        showSelectedLabel2(4,8);
    }//GEN-LAST:event_row4col8MouseClicked

    private void row5col0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col0MouseClicked
        showSelectedLabel(5,0);
    }//GEN-LAST:event_row5col0MouseClicked

    private void row5col1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col1MouseClicked
        showSelectedLabel(5,1);
    }//GEN-LAST:event_row5col1MouseClicked

    private void row5col2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col2MouseClicked
        showSelectedLabel(5,2);
    }//GEN-LAST:event_row5col2MouseClicked

    private void row5col3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col3MouseClicked
        showSelectedLabel(5,3);
    }//GEN-LAST:event_row5col3MouseClicked

    private void row5col4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col4MouseClicked
        showSelectedLabel(5,4);
    }//GEN-LAST:event_row5col4MouseClicked

    private void row5col5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col5MouseClicked
        showSelectedLabel(5,5);
    }//GEN-LAST:event_row5col5MouseClicked

    private void row5col6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col6MouseClicked
        showSelectedLabel(5,6);
    }//GEN-LAST:event_row5col6MouseClicked

    private void row5col7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col7MouseClicked
        showSelectedLabel2(5,7);
    }//GEN-LAST:event_row5col7MouseClicked

    private void row5col8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5col8MouseClicked
        showSelectedLabel2(5,8);
    }//GEN-LAST:event_row5col8MouseClicked
    
    /* Oyun kazanınca ya da kaybedince selectedRow -1 olur. Bu şekilde butonlara tıklansa bile işlem gerçekleştirilmez */
    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("7");
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("8");
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("9");
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if(selectedRow != -1)    
            guessMatrix[selectedRow][selectedColumn].setText("4");
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("5");
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("6");
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("1");
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("2");
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("3");
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("0");
    }//GEN-LAST:event_btn0ActionPerformed

    private void plusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusBtnActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("+");
    }//GEN-LAST:event_plusBtnActionPerformed

    private void minusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusBtnActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("-");
    }//GEN-LAST:event_minusBtnActionPerformed

    private void equalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalBtnActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("=");
    }//GEN-LAST:event_equalBtnActionPerformed

    private void mulBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulBtnActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("*");
    }//GEN-LAST:event_mulBtnActionPerformed

    private void divBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divBtnActionPerformed
        if(selectedRow != -1)
            guessMatrix[selectedRow][selectedColumn].setText("/");
    }//GEN-LAST:event_divBtnActionPerformed

    //silme işleminin yapılması
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        if(selectedRow != -1){ //oynanacak hamle varsa gerekli işlem gerçekleşsin
            guessMatrix[selectedRow][selectedColumn].setText(""); //ilgili yeri siler
            if(selectedColumn != 0){ //en baştaki sütunda ise sadece silme işlemi yapar
                guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLACK)); //ilgili yerin border'ını siyah yapar
                selectedColumn--; //bir geri gider
                guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLUE)); //yeni yerin border'ını mavi yapar
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed
    
    //sonra bitir butonunun çalışması
    private void finishLaterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishLaterBtnActionPerformed
        if(selectedRow != -1){ //oynanacak hamle varsa gerekli işlem gerçekleşsin
            timer.stop(); //süreyi durduruyorum
            gameScreen.setVisible(false);
            continueBtn.setVisible(true); //sonra bitir dendiği için ana ekrandaki devam et butonunu görünür yapıyorum
            guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLACK)); 
            statistics.setnOfAbondonedGames(statistics.getnOfAbondonedGames() + 1); //yarıda bırakılan oyun sayısını güncelleyiorum
            updateStatisticPanel(); //istatistik panelini güncelliyorum
            setVisible(true);
            writeToFile(); //istatistiklerde güncelleme yapıldığı için dosyaya kaydediyorum
        }
    }//GEN-LAST:event_finishLaterBtnActionPerformed

    //devam et butonunun çalışması
    private void continueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueBtnActionPerformed
        setVisible(false);
        if(guessMatrix == null){ //eğer oyun yeni başladıysa matrisi oluşturuyorum
            createGuessMatrix(generatedEquation.length());
            if(equationsInRows != null){
                for(String row : equationsInRows){
                    for(int i = 0; i < generatedEquation.length(); i++){
                        guessMatrix[selectedRow][i].setText(String.format("%c", row.charAt(i))); //matrisi önceki bilgilerle doldurup renklediriyorum
                    }
                    exp = row;
                    adjustingColors();
                    selectedRow++;
                } 
            }
            
        }
        timerLbl.setText(String.format("%02d:%02d:%02d", elapsedTime / 3600000, (elapsedTime / 60000) % 60, (elapsedTime / 1000) % 60)); //süreyi ayarlıyorum
        timer.start(); //süreyi başlatıyorum
        gameScreen.setVisible(true);
        guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLUE)); //ilgili satırdaki ilk hücreyi seçiyorum
    }//GEN-LAST:event_continueBtnActionPerformed
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
        
    }
    
    /* Tanımladığım değişkenler*/
    private javax.swing.JLabel[][] guessMatrix; //denklemin uzunluğuna göre değişen tahmin matrisim
    private ArrayList<String> equationsInRows = new ArrayList<>(); //yazılan denklemleri satır satır saklayan arraylist
    private String exp; //o anki yazılan denklem
    private String generatedEquation; //üretilen denklem
    private int selectedRow; //seçili olan satırı gösterir. eğer -1 ise oyun bitmiştir ve ekrandaki bazı şeylere tıklamayı kısıtlar
    private int selectedColumn; //seçili olan sütunu gösterir
    private Statistics statistics; //istatistikleri tuttuğum kısım
    /* Timer değişkenleri */
    int elapsedTime = 0; //saniye cinsinden süre
    String secondsString;
    String minutesString;
    String hoursString;
    
    Timer timer = new Timer(1000, new ActionListener() { //her 1 saniyede güncelleme yapar
        @Override
        public void actionPerformed(ActionEvent e) {
            elapsedTime += 1000; //1 saniye arttırır
            secondsString = String.format("%02d", (elapsedTime / 1000) % 60);
            minutesString = String.format("%02d", (elapsedTime / 60000) % 60);
            hoursString = String.format("%02d", (elapsedTime / 3600000));
            timerLbl.setText(hoursString + ":" + minutesString + ":" + secondsString); //süreyi ekranda günceller
        }
    });
    
    //tahminlerin gösterildiği ve tutulduğu matris yapım - Daha güzel olabilir miydi bilmiyorum :)
    public void createGuessMatrix(int column){
        guessMatrix = new javax.swing.JLabel[6][column]; //ilgili column bilgisine göre oluşturuyorum
        guessMatrix[0][0] = row0col0; guessMatrix[0][1] = row0col1; guessMatrix[0][2] = row0col2; guessMatrix[0][3] = row0col3;  
        guessMatrix[0][4] = row0col4; guessMatrix[0][5] = row0col5; guessMatrix[0][6] = row0col6; 
        guessMatrix[1][0] = row1col0; guessMatrix[1][1] = row1col1; guessMatrix[1][2] = row1col2; guessMatrix[1][3] = row1col3;  
        guessMatrix[1][4] = row1col4; guessMatrix[1][5] = row1col5; guessMatrix[1][6] = row1col6; 
        guessMatrix[2][0] = row2col0; guessMatrix[2][1] = row2col1; guessMatrix[2][2] = row2col2; guessMatrix[2][3] = row2col3;  
        guessMatrix[2][4] = row2col4; guessMatrix[2][5] = row2col5; guessMatrix[2][6] = row2col6;
        guessMatrix[3][0] = row3col0; guessMatrix[3][1] = row3col1; guessMatrix[3][2] = row3col2; guessMatrix[3][3] = row3col3;  
        guessMatrix[3][4] = row3col4; guessMatrix[3][5] = row3col5; guessMatrix[3][6] = row3col6;
        guessMatrix[4][0] = row4col0; guessMatrix[4][1] = row4col1; guessMatrix[4][2] = row4col2; guessMatrix[4][3] = row4col3;  
        guessMatrix[4][4] = row4col4; guessMatrix[4][5] = row4col5; guessMatrix[4][6] = row4col6;
        guessMatrix[5][0] = row5col0; guessMatrix[5][1] = row5col1; guessMatrix[5][2] = row5col2; guessMatrix[5][3] = row5col3;  
        guessMatrix[5][4] = row5col4; guessMatrix[5][5] = row5col5; guessMatrix[5][6] = row5col6;
        //ilk 6 sütun ztn hepsinde var. O yüzden ekliyorum
        if(column > 7){ // eğer denklem 8 sütunsa o zaman 7.sütunu da ekleyip görünür yapıyorum
            guessMatrix[0][7] = row0col7; guessMatrix[0][7].setVisible(true); guessMatrix[1][7] = row1col7; guessMatrix[1][7].setVisible(true);
            guessMatrix[2][7] = row2col7; guessMatrix[2][7].setVisible(true); guessMatrix[3][7] = row3col7; guessMatrix[3][7].setVisible(true);
            guessMatrix[4][7] = row4col7; guessMatrix[4][7].setVisible(true); guessMatrix[5][7] = row5col7; guessMatrix[5][7].setVisible(true);
        }
        
        if(column > 8){  // eğer denklem 9 sütunsa o zaman 8.sütunu da ekleyip görünür yapıyorum
            guessMatrix[0][8] = row0col8; guessMatrix[0][8].setVisible(true); guessMatrix[1][8] = row1col8; guessMatrix[1][8].setVisible(true);  
            guessMatrix[2][8] = row2col8; guessMatrix[2][8].setVisible(true); guessMatrix[3][8] = row3col8; guessMatrix[3][8].setVisible(true);
            guessMatrix[4][8] = row4col8; guessMatrix[4][8].setVisible(true); guessMatrix[5][8] = row5col8; guessMatrix[5][8].setVisible(true);
        }
        selectedRow = selectedColumn = 0; //matrisin ilk elemanını seçmesi için ayarlıyorum
    }
    
    //matrisi tamamen beyaza boyar
    private void paintGuessMatrix(){
        for(int i = 0; i < 6; i++){
            for(int j = 0; j < guessMatrix[0].length; j++){
                guessMatrix[i][j].setBackground(Color.WHITE);
            }
        }
    }
    
    //gerekli hücreleri gizler
    private void makeInvisibleLabel(){ 
        for(int i = 0; i < 6; i++){
            for(int j = 7; j < guessMatrix[0].length; j++){
                guessMatrix[i][j].setVisible(false);
            }
        }
    }
    
    //gönderilen değerin rakam olup olmadığına bakar
    private boolean isOperand(String x){ 
        return 0<= x.compareTo("0") && x.compareTo("0") <= 9;
    }
    
    //matristeki verileri temizler
    private void clearAllTextField(){ 
        for(int i = 0; i < 6; i++){
            for(int j = 0; j < guessMatrix[0].length; j++){
                guessMatrix[i][j].setText("");
            }
        }
    }
    
    //Ayrı 2 method yazmamım sebebi ilk 6 sütun boşuna kontrol yapmamak
    //ilk 6 sütun için kullanılan ve ilgili kutucuğa tıklanınca onu seçili hale getiren method
    private void showSelectedLabel(int selectedLabelRowNo, int selectedLabelColNo){
        if(selectedRow != -1 && selectedRow == selectedLabelRowNo){
            guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLACK));
            selectedColumn = selectedLabelColNo;
            guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLUE));
        }
    }
    
    //7. ve 8. sütunlar için kullanılan ve ilgili kutucuğa tıklanınca onu seçili hale getiren method
    private void showSelectedLabel2(int selectedLabelRowNo, int selectedLabelColNo){
        if(selectedRow != -1 && selectedRow == selectedLabelRowNo && generatedEquation.length() > selectedLabelColNo){
            guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLACK));
            selectedColumn = selectedLabelColNo;
            guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLUE));
        }
    }
    
    //oyunun durumunu kontrol eder
    private void checkSituation(){ 
        if(generatedEquation.compareTo(exp) == 0){ //eşit mi diye bakıyorum
            guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLACK));
            adjustingColors(); //renkleri ayarlıyorum
            timer.stop(); //süreyi durduruyorum
            JOptionPane.showMessageDialog(gameScreen, "TEBRİKLER !! Süre: " + String.format("%02d:%02d:%02d", elapsedTime / 3600000, (elapsedTime / 60000) % 60, (elapsedTime / 1000) % 60));
            returnMainScreenBtn.setVisible(true); //oyun bittiği için ana menü butonunu görünür yapıyorum
            /* gerekli istatistikleri güncelliyorum */
            statistics.setnOfGamesWon(statistics.getnOfGamesWon() + 1);
            statistics.setInHowManyLinesOnAverage((statistics.getInHowManyLinesOnAverage() * (statistics.getnOfGamesWon() - 1) + (selectedRow + 1)) / statistics.getnOfGamesWon());
            statistics.setinHowManySeconds((statistics.getinHowManySeconds() * (statistics.getnOfGamesWon() - 1) + elapsedTime) / statistics.getnOfGamesWon());
            selectedRow = -1; //oyun bittiği için seçili satırı -1 yapıyorum ve bazı şeylerin seçilmesini engelliyorum
        }else{
            if(selectedRow + 1 != 6){ //son satırda olup olmadığımızı kontrol ediyorum. Eğer koşul doğru olursa demekki son satıra gelmişiz ve doğru bilememişiz
                guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLACK));
                selectedColumn = 0; //bir sonraki satırın ilk kutucuğunu göstermesi için ayarlıyorum
                adjustingColors();
                selectedRow++; //bir sonraki satıra geçmeyi sağlıyorum
                guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLUE));
            }else{
                guessMatrix[selectedRow][selectedColumn].setBorder(BorderFactory.createLineBorder(Color.BLACK));
                adjustingColors();
                timer.stop(); //oyun bittiği için süreyi durduruyorum
                JOptionPane.showMessageDialog(gameScreen, "KAYBETTİNİZ !! Aranan denklem: " + generatedEquation);
                returnMainScreenBtn.setVisible(true); //oyun bittiği için ana menü butonunu görünür yapıyorum
                statistics.setnOfGamesLost(statistics.getnOfGamesLost() + 1); //kaybettiği oyun sayısını güncelliyorum
                selectedRow = -1; //oyun bittiği için seçili satırı -1 yapıyorum ve bazı şeylerin seçilmesini engelliyorum
            }
        }
    }
    
    //renklendirme işlemini yapar
    private void adjustingColors(){
        for(int i = 0; i < guessMatrix[0].length; i++){ //önce doğru olanları yeşil yapıyorum, sonra geri kalanlar için gerekli kontrolü yapıyorum
            if(generatedEquation.charAt(i) == exp.charAt(i)){
                guessMatrix[selectedRow][i].setBackground(Color.GREEN);
            }
        }
        
        for(int i = 0; i < guessMatrix[0].length; i++){
            if(guessMatrix[selectedRow][i].getBackground() != Color.GREEN){
                if(findElement(exp.charAt(i))){
                    guessMatrix[selectedRow][i].setBackground(Color.YELLOW);
                }else{
                    guessMatrix[selectedRow][i].setBackground(Color.RED);
                }
            }
        }
    }
    
    
    //gönderilen karakter'in üretilen denklemde olup olmadığını ve eğer varsa daha önceden ilgili kısmın başka bir şey tarafından yeşil yapılıp yapılmadığına bakıyorum
    
        
    private boolean findElement(char wanted){ 
        for(int i = 0; i < guessMatrix[0].length; i++){ 
            if(generatedEquation.charAt(i) == wanted){
               if(guessMatrix[selectedRow][i].getBackground() != Color.GREEN){
                   return true;
               }
            }
        }
        return false;
    }
    
    //istatistik panelini günceller
    public void updateStatisticPanel(){
        nOfAbondonedGamesTxt.setText(String.format("%d", statistics.getnOfAbondonedGames()));
        nOfGamesLostTxt.setText(String.format("%d", statistics.getnOfGamesLost()));
        nOfGamesWonTxt.setText(String.format("%d", statistics.getnOfGamesWon()));
        int second = statistics.getinHowManySeconds();
        inHowLongOnAverageTxt.setText(String.format("%02d:%02d:%02d", second / 3600000, (second / 60000) % 60, (second / 1000) % 60));
        inHowManyLinesOnAverageTxt.setText(String.format(Locale.US,"%.2f", statistics.getInHowManyLinesOnAverage()));
    }
    
    //dosya varsa okuma işlemini gerçekleştirir
    public void readFromFile(){
        try{
            File file = new File("game.bin");
            if(file.exists()){
                ObjectInputStream objIn = new ObjectInputStream(new FileInputStream("game.bin"));
                statistics = (Statistics) objIn.readObject();
                updateStatisticPanel();
                equationsInRows = (ArrayList<String>) objIn.readObject();
                generatedEquation = (String) objIn.readObject();
                if(generatedEquation != null){ //eğer üretilen denklem boş değilse demekki önceden kalan bir oyun var. O yüzden devam et butonunu görünür yapıyorum
                    continueBtn.setVisible(true);
                }
                elapsedTime= (Integer) objIn.readObject();
                objIn.close();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(gameScreen, "Dosyadan okurken bir hata meydana geldi!! " + e);
        }
    }
    
    //dosyaya yazma işlemini gerçekleştirir.
    public void writeToFile(){
        try{
            ObjectOutputStream objOut = new ObjectOutputStream(new FileOutputStream("game.bin"));
            objOut.writeObject(statistics);
            objOut.writeObject(equationsInRows);
            objOut.writeObject(generatedEquation);
            objOut.writeObject(elapsedTime);
            objOut.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(gameScreen, "Dosyaya yazarken bir hata meydana geldi!! " + e);
        }
    }
    
    //test aşamasında kontrol için matrisi oraya döndürüyorum
    public javax.swing.JLabel[][] getGuessMatrix(){
        return guessMatrix;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainScreenBtnsPnl;
    private javax.swing.JPanel StatisticsPnl;
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JPanel btnsPnl;
    private javax.swing.JButton continueBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton divBtn;
    private javax.swing.JButton equalBtn;
    private javax.swing.JPanel equationFooter;
    private javax.swing.JFrame equationScreen;
    private javax.swing.JButton finishLaterBtn;
    private javax.swing.JFrame gameScreen;
    private javax.swing.JPanel gameScreenFooter;
    private javax.swing.JPanel gameScreenFooter1;
    private javax.swing.JButton generateAgainBtn;
    private javax.swing.JLabel generatedEquationLbl;
    private javax.swing.JTextField generatedEquationTxt;
    private javax.swing.JButton guessBtn;
    private javax.swing.JPanel guessMatrixPnl;
    private javax.swing.JLabel inHowLongOnAverageLbl;
    private javax.swing.JTextField inHowLongOnAverageTxt;
    private javax.swing.JLabel inHowManyLinesOnAverageLbl;
    private javax.swing.JTextField inHowManyLinesOnAverageTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mainMenuBtn;
    private javax.swing.JButton minusBtn;
    private javax.swing.JButton mulBtn;
    private javax.swing.JLabel nOfAbondonedGamesLbl;
    private javax.swing.JTextField nOfAbondonedGamesTxt;
    private javax.swing.JLabel nOfGamesLostLbl;
    private javax.swing.JTextField nOfGamesLostTxt;
    private javax.swing.JLabel nOfGamesWonLbl;
    private javax.swing.JTextField nOfGamesWonTxt;
    private javax.swing.JButton newGameBtn;
    private javax.swing.JPanel otherBtnsPnl;
    private javax.swing.JButton plusBtn;
    private javax.swing.JButton returnMainScreenBtn;
    private javax.swing.JLabel row0col0;
    private javax.swing.JLabel row0col1;
    private javax.swing.JLabel row0col2;
    private javax.swing.JLabel row0col3;
    private javax.swing.JLabel row0col4;
    private javax.swing.JLabel row0col5;
    private javax.swing.JLabel row0col6;
    private javax.swing.JLabel row0col7;
    private javax.swing.JLabel row0col8;
    private javax.swing.JLabel row1col0;
    private javax.swing.JLabel row1col1;
    private javax.swing.JLabel row1col2;
    private javax.swing.JLabel row1col3;
    private javax.swing.JLabel row1col4;
    private javax.swing.JLabel row1col5;
    private javax.swing.JLabel row1col6;
    private javax.swing.JLabel row1col7;
    private javax.swing.JLabel row1col8;
    private javax.swing.JLabel row2col0;
    private javax.swing.JLabel row2col1;
    private javax.swing.JLabel row2col2;
    private javax.swing.JLabel row2col3;
    private javax.swing.JLabel row2col4;
    private javax.swing.JLabel row2col5;
    private javax.swing.JLabel row2col6;
    private javax.swing.JLabel row2col7;
    private javax.swing.JLabel row2col8;
    private javax.swing.JLabel row3col0;
    private javax.swing.JLabel row3col1;
    private javax.swing.JLabel row3col2;
    private javax.swing.JLabel row3col3;
    private javax.swing.JLabel row3col4;
    private javax.swing.JLabel row3col5;
    private javax.swing.JLabel row3col6;
    private javax.swing.JLabel row3col7;
    private javax.swing.JLabel row3col8;
    private javax.swing.JLabel row4col0;
    private javax.swing.JLabel row4col1;
    private javax.swing.JLabel row4col2;
    private javax.swing.JLabel row4col3;
    private javax.swing.JLabel row4col4;
    private javax.swing.JLabel row4col5;
    private javax.swing.JLabel row4col6;
    private javax.swing.JLabel row4col7;
    private javax.swing.JLabel row4col8;
    private javax.swing.JLabel row5col0;
    private javax.swing.JLabel row5col1;
    private javax.swing.JLabel row5col2;
    private javax.swing.JLabel row5col3;
    private javax.swing.JLabel row5col4;
    private javax.swing.JLabel row5col5;
    private javax.swing.JLabel row5col6;
    private javax.swing.JLabel row5col7;
    private javax.swing.JLabel row5col8;
    private javax.swing.JLabel studentInformation;
    private javax.swing.JLabel studentInformation1;
    private javax.swing.JLabel studentInformation2;
    private javax.swing.JButton testBtn;
    private javax.swing.JPanel timePnl;
    private javax.swing.JLabel timerLbl;
    // End of variables declaration//GEN-END:variables
}
